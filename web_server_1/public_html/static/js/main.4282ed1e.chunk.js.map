{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Header.js","Footer.js","SelectList.js","Offices.js","index.js","Header.module.css"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","changeName","new_name","setState","companyName","state","className","styles","this","onClick","document","getElementById","value","type","id","React","Component","Footer","style","color","authorName","SelectList","array","map","oneItem","index","code","name","Offices","handleChange","event","target","updateArrayItem","i","offices_index","list","offices_data","office","j","deleteData","innerHTML","fetch","method","res","json","response","clearAll","error","message","changePrev","length","changeNext","addData","data","officecode","addressline1","addressline2","city","country","postalcode","phone","territory","headers","redirect","referrerPolicy","body","JSON","stringify","updateData","push","offices_count","getOneOffice","offices","console","log","msg","saveData","isLoaded","ok","json_response","min","step","onChange","provinces","countries","Page","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.4282ed1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport styles from './Header.module.css'\n\nclass Header extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {companyName: this.props.companyName}\n        // contructor code here\n      }\n       changeName =(new_name)=>{\n                this.setState({companyName:new_name})\n            }\n\n         render(){\n            return (\n            <header className={styles.Header}>\n                This is the {this.state.companyName}\n                 <button onClick={()=>this.changeName(document.getElementById('xyz123').value)}>Change name</button>\n                <input type=\"text\" id=\"xyz123\"/>\n            </header>\n        )\n        }\n\n\n}\n\nexport default Header","import React from 'react'\n\nclass Footer extends React.Component{\n    constructor(props) {\n        super(props);\n        // contructor code here\n    }\n         render(){\n            return (\n    <footer style={{color:\"red\"}}>\n        &copy;{this.props.authorName}\n    </footer>)\n        }\n    }\n\n    export default Footer","import React from 'react';\nclass SelectList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {array:this.props.array}\n    }\n    render(){\n    return(\n        <select>\n            {this.props.array.map((oneItem,index)=>(\n            <option key={index} value={oneItem.code}>\n                {oneItem.name}\n            </option>\n            ))}\n        </select>\n    )\n }\n}\nexport default SelectList;","import React from 'react';\n\n/**\n* offices components\n* uses our office server REST API http://localhost:3001/Offices\n* props inputs: none\n*/\nclass Offices extends React.Component {\n    constructor(props) {\n      super(props);\n\n      // set initial state\n      // do not use setState in constructor, write state directly\n      this.state = {\n        offices_data : [], // will contain offices data array from server\n        offices_index : 0, // the index of the office currently shown, start at first in array\n        offices_count : 0, // how many offices in data array from server\n        isLoaded : false,  // will be true after data have been received from server\n        error : null       // no errors yet !\n      };\n\n\n         \n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]:event.target.value})\n     }\n\n    // REACT component lifecycle for componentDidMount\n    // https://www.w3schools.com/react/react_lifecycle.asp\n    componentDidMount() {\n\n       // AJAX call using fetch. Make sure the office server is running !\n       // see https://reactjs.org/docs/faq-ajax.html\n      fetch('http://localhost:8000/offices')\n        .then(\n            (response)=> {\n                // here full fetch response object\n                //console.log(response)\n                // fetch not like jQuery ! both ok code 200 and error code 404 will execute this .then code\n                if (response.ok) {\n                    // handle 2xx code success only\n                    // get only JSON data returned from server with .json()\n                    response.json().then(json_response => {\n                        console.log(json_response)\n                        this.setState({\n                            offices_data:json_response.offices, // data received from server\n                           offices_count:json_response.offices.length, // how many offices in array\n                           offices_index:0,  // will first show the first office in the array\n                            isLoaded : true,  // we got data\n                            error : null // no errors\n                        })\n                    }\n                    )\n\n                }else{\n                    // handle errors, for example 404\n                    response.json().then(json_response => {\n                        this.setState({\n                            isLoaded: false,\n                            // result returned is case of error is like  {message: \"office not found\"}\n                            // save the error in state for display below\n                            error:json_response,   // something in format  {message: \"office not found\", db_data:{}}\n                            offices_data: {}, // no data received from server\n                            offices_count:0,\n                            offices_index:0,\n                        });\n                    })\n                }\n            },\n\n            (error) => {\n                // Basically fetch() will only reject a promise if the URL is wrong, the user is offline,\n                // or some unlikely networking error occurs, such a DNS lookup failure.\n                this.setState({\n                    isLoaded: false,\n                    error: {message:\"AJAX error, URL wrong or unreachable, see console\"}, // save the AJAX error in state for display below\n                    offices_data: {}, // no data received from server\n                    offices_count:0,\n                    offices_index:0,\n                });\n            }\n        )\n    }\n\n\n\n    updateArrayItem = (event) => {\n        const i=this.state.offices_index\n        this.setState(state => {\n          const list = state.offices_data.map((office, j) => {\n            if (j === i) {\n              // the new value of the form field beeing modified\n              // the input NAME must be the same as in the office object (and table colum)\n              office[event.target.name]=event.target.value\n              return office;\n            } else {\n              return office;\n            }\n          });\n\n          return {\n            list,\n          };\n        });\n      };\n      deleteData =()=>{\n        document.getElementById(\"status\").innerHTML = \"Waiting for server\"\n\n        fetch(\"http://localhost:8000/offices/\" + document.getElementById('officecode').value,\n            {\n                method: 'DELETE'\n                //,body: JSON.stringify(someData)// data to send in the body of the request\n            }\n        )\n\n            .then(res => res.json())//here server sends JSON response\n            .then(\n                (response) => {\n                    // TO DO how to handle code other than 200 because this gets\n                    // exeucted in all cases\n                    this.clearAll()\n                    this.setState({error: {message:\"Form Saved\"}})\n                },\n\n                (error) => {\n                    // only NO RESPONSE URL errors will trigger this code\n                    this.setState({error: {message:\"AJAX error: URL wrong or unreachable, see console\"}})\n                }\n\n            )\n      }\n    changePrev =()=>{\n     if((this.state.offices_index-1)===-1)\n     this.setState({offices_index:this.state.offices_data.length-1})\n     else\n     this.setState({offices_index:this.state.offices_index-1})\n    }\n    changeNext =()=>{\n\n     if((this.state.offices_index+1)===this.state.offices_data.length)\n     this.setState({offices_index:0})\n     else\n     this.setState({offices_index:this.state.offices_index+1})\n    }\n\n    addData =()=>{\n        let data ={\n            officecode: document.getElementById(\"officecode\").value,\n            addressline1: document.getElementById(\"addressline1\").value,\n            addressline2: document.getElementById(\"addressline2\").value,\n            city: document.getElementById(\"city\").value,\n            state: document.getElementById(\"state\").value,\n            country: document.getElementById(\"country\").value,\n            postalcode: document.getElementById(\"postalcode\").value,\n            phone: document.getElementById(\"phone\").value,\n            territory: document.getElementById(\"territory\").value,\n\n        }\n        fetch(\"http://localhost:8000/offices/\",\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                //'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *client\n            body: JSON.stringify(data)\n        }\n    )\n        .then(res => res.json())//here server sends JSON response\n        .then(\n            (response) => {\n                // TO DO how to handle code other than 200 because this gets\n                // exeucted in all cases\n                this.setState({error: {message:\"Form Saved\"}})\n            },\n\n            (error) => {\n                // only NO RESPONSE URL errors will trigger this code\n                this.setState({error: {message:\"AJAX error: URL wrong or unreachable, see console\"}})\n            }\n\n        )\n    }\n     updateData =()=> {\n\n\n        let data = {\n            officecode: document.getElementById('officecode').value,\n            addressline1: document.getElementById('addressline1').value,\n            addressline2: document.getElementById('addressline2').value,\n            city: document.getElementById('city').value,\n            state: document.getElementById('state').value,\n            country: document.getElementById('country').value,\n            postalcode: document.getElementById('postalcode').value,\n            phone: document.getElementById('phone').value,\n            territory: document.getElementById('territory').value\n        }\n\n        fetch(\"http://localhost:8000/offices/\" + document.getElementById('officecode').value,\n            {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                    //'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: 'follow', // manual, *follow, error\n                referrerPolicy: 'no-referrer', // no-referrer, *client\n                body: JSON.stringify(data)\n            }\n        )\n            .then(res => res.json())//here server sends JSON response\n            .then(\n                (response) => {\n                    // TO DO how to handle code other than 200 because this gets\n                    // exeucted in all cases\n                    this.setState({error: {message:\"Form Saved\"}})\n                },\n\n                (error) => {\n                    // only NO RESPONSE URL errors will trigger this code\n                    //document.getElementById(\"status\").innerHTML = \"AJAX error: URL wrong or unreachable, see console\"\n                    this.setState({error: {message:\"AJAX error: URL wrong or unreachable, see console\"}})\n\n                }\n\n            )\n\n    }\n\n    clearAll =()=>{\n    //console.log(this.state.offices_count)\n\n    this.state.offices_data.push({\n\n        officecode:\"\",\n\n        addressline1:\"\",\n\n        addressline2:\"\",\n\n        city:\"\",\n\n        state:\"\",\n\n        country:\"\",\n\n        postalcode:\"\",\n\n        phone:\"\",\n\n        territory:\"\"\n\n    })\n\n    this.setState( {\n\n        offices_index : this.state.offices_count\n\n    })\n }\n    getOneOffice =()=> {\n    this.clearAll()\n    document.getElementById(\"status\").innerHTML = \"Waiting for server\"\n    fetch(\"http://localhost:8000/offices/\" + document.getElementById('officecode').value,\n        {\n            method: 'GET',\n        }\n    )\n        .then(res => res.json())//here server sends JSON response\n        .then(\n            (response) => {\n                // TO DO how to handle code other than 200 because this gets\n                // executed in all cases\n                let offices = response.offices;\n                console.log(offices)\n\n                //document.getElementById(\"response\").innerHTML = html\n                document.getElementById(\"status\").innerHTML = response.msg\n\n                document.getElementById('officecode').value = offices.officecode\n                document.getElementById('addressline1').value = offices.addressline1\n                document.getElementById('addressline2').value = offices.addressline2\n                document.getElementById('city').value = offices.city\n                document.getElementById('state').value = offices.state\n                document.getElementById('country').value = offices.country\n                document.getElementById('postalcode').value = offices.postalcode\n                document.getElementById('phone').value = offices.phone\n                document.getElementById('territory').value = offices.territory\n            },\n            (error) => {\n                this.setState({error: {message:\"AJAX error: URL wrong or unreachable, see console\"}})\n            }\n        )\n}\n saveData =()=>\n {\n    if (document.getElementById('officecode').value == \"\") {\n        this.addData()\n    } else {\n        this.updateData()\n    }\n }\n\n    // display the offices table\n    render() {\n\n        if(this.state.error){\n            return <div><b>{this.state.error.message}</b></div>;\n        }else if(this.state.isLoaded){\n            if(this.state.offices_count!==0){\n                // office table not empty\n                return (\n                    <div>\n                    <form id=\"officeform\">\n                        <label>officecode</label> <input type=\"number\" name=\"officecode\" id=\"officecode\" min=\"0\" step=\"1\" value={this.state.offices_data[this.state.offices_index].officecode} onChange={(event)=>this.updateArrayItem(event)} /><br/>\n                        <label>Address Line 1</label> <input type=\"text\" name=\"addressline1\" id=\"addressline1\" value={this.state.offices_data[this.state.offices_index].addressline1} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>Address Line 2</label> <input type=\"text\" name=\"addressline2\" id=\"addressline2\" value={this.state.offices_data[this.state.offices_index].addressline2} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>City</label> <input type=\"text\" name=\"city\" id=\"city\" value={this.state.offices_data[this.state.offices_index].city} onChange={(event)=>this.updateArrayItem(event)} /><br/>\n                        <label>State</label> <input type=\"text\" name=\"state\" id=\"state\" value={this.state.offices_data[this.state.offices_index].state} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>Country</label> <input type=\"text\" name=\"country\" id=\"country\" value={this.state.offices_data[this.state.offices_index].country} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>Postal Code</label> <input type=\"text\" name=\"postalcode\" id=\"postalcode\" value={this.state.offices_data[this.state.offices_index].postalcode} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>Phone</label> <input type=\"text\" name=\"phone\" id=\"phone\" value={this.state.offices_data[this.state.offices_index].phone} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n                        <label>Territory</label> <input type=\"text\" name=\"territory\" id=\"territory\" value={this.state.offices_data[this.state.offices_index].territory} onChange={(event)=>this.updateArrayItem(event)}/><br/>\n\n                        <button type=\"button\" onClick={()=>this.changePrev()}>Prev</button>\n                        <button type=\"button\" onClick={()=>this.changeNext()}>Next</button><br>\n                        </br>\n                        <button type=\"button\" onClick={()=>this.clearAll()}>Clear</button>\n                        <button type=\"button\" onClick={()=>this.deleteData()}>Delete</button>\n                        <button type=\"button\" onClick={()=>this.saveData()}>Save</button>\n                    </form>\n\n                    </div>\n                )\n            }else{\n                return(<div><b>office table is empty</b></div>)\n            }\n        }else{\n            return (<div><b>Waiting for server ...</b></div>)\n        }\n    }\n}\n\nexport default Offices;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport SelectList from './SelectList.js';\nimport Offices from './Offices.js';\n\nconst provinces=[ {code:'QC',name:'Quebec'},{code:'ON',name:'Ontario'},{code:'NB',name:'New-Brunswick'}]\n\nconst countries=[{code:'CA',name:'Canada'},{code:'US',name:'USA'},{code:'IN',name:'India'},{code:'MX',name:'Mexixo'}]\n\nclass Page extends React.Component{\n  render(){\n            return (\n            <div>\n                <Header companyName=\"blabla.com\"/>\n                <p>Hello World !</p>\n                <SelectList array={provinces}/>\n                 <SelectList array={countries}/>\n                 <Offices/>\n                <Footer authorName=\"Janki\"/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Page/>,document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1O8b7\"};"],"sourceRoot":""}